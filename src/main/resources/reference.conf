compiler {
	
	# Location of the compiler on your system. Its also possible to just specify the 
	# app's name if you placed the compiler on your system path.
	root="C:/Users/Jonathan/Apps/NwScriptCompiler/NWNScriptCompiler.exe"
	
	# List the directories where your include files might be. Does this using the 
	# compiler's -i option.
	include-directories=["C:/Users/Jonathan/Documents/GitHub/NWScriptBuilder/dir"]
	
	# Compiler's options are stated here, don't specify the target file, the 
	# application will handle this automatically.
	options="-caglov1.69"
	
	# If set to true, the application will spawn multiple processes to do full 
	# compiles.
	multi-processes=true
	
	# The way the load is distributed is by separating each file starting with the 
	# given letter and compiling it. One process is assigned for each element in the 
	# list. The compiler will then compile each of its assigned letters.
	#
	# For example, in this case one process will be assigned to compile all files 
	# starting with the letter n. Another process will do the letter c, and another 
	# which will compile all files which start with bot the letter h and f.
	process-assignments=["n","c","hf"]
	
	# This will filter everything out except error messages and compilation messages.
	filter-output=false
}
watchers {
	startup {
		# List the directories that you want the build utility to automatically start
		# watching on startup.
		directories=["C:/Users/Jonathan/Documents/GitHub/NWScriptBuilder/dir"]
		
		# True if you wish to compile all files on startup. This doesn't affect new 
		# manually initialized watchers.
		full-compile=true
	}
	
	
}
